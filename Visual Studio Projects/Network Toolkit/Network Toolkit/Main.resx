<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        P/7gAD/+4AA//vAAP/7wAD/+
</value>
  </data>
</root>